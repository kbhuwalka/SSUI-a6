{"version":3,"sources":["logo.svg","components/Navbar.js","components/LocationHeader.js","components/LocationDetails.js","components/MainContent.js","locations.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","props","react_default","a","createElement","className","id","locations","map","location","onClick","changeLocation","LocationHeader","locationName","LocationDetails","locationDescription","para","MainContent","components_LocationHeader","components_LocationDetails","Mount Washington","description","image","Schenley Park","Carnegie Mellon University","Cathedral of Learning","Point Park","App","state","name","background","backgroundImage","handleLocationChange","newLocation","_this","setState","style","this","components_Navbar","Object","keys","components_MainContent","Component","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iGAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,6KCoBzBC,SAlBA,SAACC,GACd,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QAAQC,GAAG,cAErBL,EAAMM,UAAUC,IAAI,SAAAC,GAAQ,OAC1BP,EAAAC,EAAAC,cAAA,MAAIM,QAAS,kBAAMT,EAAMU,eAAeF,KACtCP,EAAAC,EAAAC,cAAA,SAAIK,WCMPG,EAdQ,SAACX,GACtB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAmBC,GAAG,oBACjCJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBAAwBH,EAAAC,EAAAC,cAAA,UAAKH,EAAMY,eAClDX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,KAAGE,GAAG,YAAYD,UAAU,0BAA5B,YAEEH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,6BAAb,kBCcGS,EArBS,SAACb,GACvB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASC,GAAG,kBACvBJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,4BAA4BC,GAAG,cAA5C,UACDJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAGfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+CACZJ,EAAMc,oBAAoBP,IAAI,SAAAQ,GAAI,OACjCd,EAAAC,EAAAC,cAAA,SAAIY,OAIVd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4CCAZY,EAbK,SAAChB,GACnB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAACc,EAAD,CACEL,aAAcZ,EAAMY,eAEpBX,EAAAC,EAAAC,cAACe,EAAD,CACEJ,oBAAqBd,EAAMc,wBC6BtBR,SAxCG,CAACa,mBAAmB,CACEC,YACA,CAAC,0ZACD,y7CACA,mYAEAC,MAAM,UAE5BC,gBAAgB,CACEF,YACA,CAAC,qUACD,2aACA,mjBAEAC,MAAM,UAExBE,6BAA6B,CACCH,YACA,CAAC,y3BACD,2UACA,kRACA,2YAEAC,MAAM,WAEpCG,wBAAwB,CACEJ,YACA,CAAC,ijCAEDC,MAAM,iBAEhCI,aAAa,CACCL,YACA,CAAC,sPACD,2TACA,4gBAEAC,MAAM,YCavBK,6MAzCbC,MAAQ,CACNnB,SAAU,CACRoB,KAAM,mBACNR,YAAYd,EAAU,oBAAV,YACZuB,WAAW,CACTC,gBAAiB,uEACjBxB,EAAU,oBAAV,MACA,UAKNyB,qBAAuB,SAACC,GACtBC,EAAKC,SAAS,CACZ1B,SAAU,CACRoB,KAAKI,EACLZ,YAAad,EAAU0B,GAAV,YACbH,WAAW,CACTC,gBAAiB,uEACjBxB,EAAU0B,GAAV,MACA,kFAON,OACE/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAMC,GAAG,MAAM8B,MAAOC,KAAKT,MAAMnB,SAASqB,YACvD5B,EAAAC,EAAAC,cAACkC,EAAD,CACE3B,eAAkB0B,KAAKL,qBACvBzB,UAAWgC,OAAOC,KAAKjC,KACzBL,EAAAC,EAAAC,cAACqC,EAAD,CACE5B,aAAgBwB,KAAKT,MAAMnB,SAASoB,KACpCd,oBAAuBsB,KAAKT,MAAMnB,SAASY,sBAnCnCqB,aCIEC,QACW,cAA7BC,OAAOnC,SAASoC,UAEe,UAA7BD,OAAOnC,SAASoC,UAEhBD,OAAOnC,SAASoC,SAASC,MACvB,2DCZNC,IAASC,OAAO9C,EAAAC,EAAAC,cAAC6C,EAAD,MAASC,SAASC,eAAe,SDuH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.8583c4d9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\n\nconst Navbar = (props) =>{\n  return (\n    <nav className=\"navbar-fixed\">\n        <div className=\"nav-wrapper\">\n          <ul className=\"right\" id=\"nav-mobile\">\n            {\n              props.locations.map(location =>\n                <li onClick={() => props.changeLocation(location)}>\n                  <a>{location}</a>\n                </li>\n              )\n            }\n          </ul>\n        </div>\n    </nav>\n  );\n}\n\nexport default Navbar;\n","import React, { Component } from 'react';\n\nconst LocationHeader = (props) =>{\n  return (\n    <div className=\"col s3 offset-s1\" id=\"header-container\">\n        <div className=\"left-align white-text\"><h3>{props.locationName}</h3></div>\n        <div className=\"left\">\n          <a id=\"read-more\" className=\"white-text header-link\">\n            Read More\n            <i className=\"material-icons white-text\">add_circle</i>\n          </a>\n        </div>\n    </div>\n  );\n}\n\nexport default LocationHeader;\n","import React, { Component } from 'react';\n\nconst LocationDetails = (props) =>{\n  return (\n    <div className=\"col s7\" id=\"card-container\">\n        <div className=\"card frosted-glass\">\n          <a><i className=\"material-icons white-text\" id=\"close-icon\">close</i></a>\n            <div className=\"right-align\">\n\n            </div>\n            <div className=\"frosted-glass-content-container\">\n              <div className=\"frosted-glass-content white-text left-align\">\n                {props.locationDescription.map(para =>\n                  <p>{para}</p>\n                )}\n              </div>\n            </div>\n            <div className=\"card-content grey-text text-darken-3\"></div>\n        </div>\n    </div>\n  );\n}\n\nexport default LocationDetails;\n","import React, { Component } from 'react';\nimport LocationHeader from './LocationHeader';\nimport LocationDetails from './LocationDetails';\n\nconst MainContent = (props) =>{\n  return (\n    <div className=\"row main-content\">\n      <LocationHeader\n        locationName={props.locationName}\n        ></LocationHeader>\n        <LocationDetails\n          locationDescription={props.locationDescription}\n          ></LocationDetails>\n    </div>\n  );\n}\n\nexport default MainContent;\n","const locations = {\"Mount Washington\":{\n                                        description:\n                                        [\"In the early history of Pittsburgh, Mount Washington was known as Coal Hill, but Coal Hill was actually on the south bank of the Monongahela River. Easy access to the Pittsburgh coal seam's outcrop near the base of Mt. Washington allowed several mines to operate there. Also, rock was quarried from the hill. Gray sandstone, for example, was quarried at Coal Hill for the second Allegheny County Courthouse.\",\n                                        \"The original switchback trails that wound up the steep slopes of Mt. Washington were barely passable to a team of horses pulling a loaded wagon. Immigrants, predominantly from Germany, settled Mount Washington by the early 19th century and worked in the plants adjacent to the Monongahela River. They became weary of climbing steep footpaths and steps to their homes, from the river valley, after work. They remembered the standseilbahns (inclines) of their former country, and proposals were advanced to construct one or more of them along Coal Hill. The Monongahela Incline was the first of these to be built in 1869–1870. The Duquesne Incline opened to the public in May 1877, and it was one of four inclined planes climbing Mount Washington that carried passengers and freight to the residential area that had spread along the top of the bluff. As the hilltop communities were virtually inaccessible by any other means, many of Pittsburgh's inclines carried horses and wagons as well as foot passengers. All carried some light freight. A third incline, the Castle Shannon Incline, which closed in 1964, also served the hilltop community on Mt. Washington with a lower station at the corner of East Carson Street and Arlington Avenue, just east of the present Station Square Transit Station. This incline was closed by its owner, the Pittsburgh Railways Company, just prior to all of their streetcar and bus routes being taken over by the Port Authority.\",\n                                        \"The Monongahela and Duquesne Inclines allow access to Mt. Washington's overlook of the downtown area of Pittsburgh. Tourists marvel at the view while riding two of only a few remaining inclines in the country. The inclines remain the best way for thousands of Pittsburghers on Mt. Washington to get to their jobs, entertainment and shopping in downtown Pittsburgh and Station Square.\"],\n\n                                        image:\"mw.jpg\"},\n\n                  \"Schenley Park\":{\n                                    description:\n                                    [\"Created in 1889 with land donated by heiress Mary Schenley, the park now contains 456 acres of trails, woods, and attractions. A daily destination for university students, business-people, and outdoor enthusiasts, the park also hosts major annual events such as the Vintage Grand Prix and the Pittsburgh Race for the Cure.\",\n                                    \"Visitors to Schenley Park can spend a morning at the remarkable Phipps Conservatory, enjoy lunch and a concert at the Schenley Park Café and Visitor Center, relax on Flagstaff Hill, play a round at the Bob O’Connor Golf Course, head to the Schenley Oval Sportsplex for ice skating or summer sports, or take a dip in the swimming pool. And of course, the trails offer a refreshing and convenient escape from the city.\",\n                                    \"The Pittsburgh Parks Conservancy restored the Schenley Park Café and Visitor Center in 2001 and operates the space today with event and culinary partners, Eat'n Park Hospitality Group. In 2005, the Parks Conservancy worked with City of Pittsburgh crews to rehabilitate the Phipps Run stream channel that stretches from behind the Visitor Center down to Panther Hollow Lake. Restoration of the Panther Hollow Watershed is continuous, with the ultimate goal of restoring Panther Hollow Lake to a water quality that will once again allow for recreational use.\"],\n\n                                    image:\"sp.jpg\"},\n\n                  \"Carnegie Mellon University\":{\n                                                description:\n                                                [\"The Carnegie Mellon University campus in Pittsburgh has served as the locale for many motion pictures. Alumnus George A. Romero filmed Creepshow (1982) in and around Margaret Morrison Carnegie Hall.Much of the on-campus scenes in the 2000 film Wonder Boys, starring Michael Douglas and Tobey Maguire, were filmed in Carnegie Mellon's campus. Other movies filmed at Carnegie Mellon include The Mothman Prophecies, Dogma, Lorenzo's Oil, Hoffa, The Dark Knight Rises, and Flashdance. The university is also featured prominently in the films Smart People, Monkey Shines, and in the anime Summer Wars. It was also referenced on an episode of The Simpsons, Weeds, and in the television film Mean Girls 2. Carnegie Mellon was identified as the university 'Rat' went to in the science fiction film The Core, as well as the university that one of the astronauts attended in the film Deep Impact.\",\n                                                \"The musical Pippin was originally conceived by Stephen Schwartz as a student musical performed by the Scotch'n'Soda student theatre troupe.[66] Schwartz also collaborated with drama student John-Michael Tebelak to expand his master's thesis project titled Godspell, created under the direction of Lawrence Carra, into a musical.\",\n                                                \"While enrolled at Carnegie Mellon, acting students Michael McKean and David Lander (class of 1969) created the characters 'Lenny & Squiggy'. The pair continued performing the characters in live comedy routines before joining the cast of the TV series Laverne and Shirley.\",\n                                                \"In 2008, Carnegie Mellon professor Randy Pausch's 'Last Lecture' became a pop culture phenomenon. Based on a lecture he gave in September 2007 – shortly after he learned his cancer had metastasized – his book quickly rose to the top of bestseller lists around the country. Named in Time Magazine's 'Time 100' list of influential people, he died in July 2008 from pancreatic cancer.\"],\n\n                                                image:\"cmu.jpg\"},\n\n                  \"Cathedral of Learning\":{\n                                            description:\n                                            [\"The University of Pittsburgh was well on the way to becoming an acropolis of neoclassical buildings on an Oakland hillside when John G. Bowman became the University's 10th chancellor in 1921. In those years following World War I, student enrollment had dramatically increased, causing a critical shortage of space. A 14-acre plot known as Frick Acres, which housed residences, gardens, and tennis courts, became the focus of Dr. Bowman's plans to erect a monumental building. A structure expanding upward, though unorthodox, would solve the growing University's problems of space and distance. More important, a tower would be a visible inspiration to all who approached the city. It would carry the message that education was the result of aspiring to great heights. The parallel lines of the truncated Gothic form, never meeting, would imply that learning is unending. The sweeping proportions would symbolize the spirit and achievement of Pittsburgh.  Architect Charles Z. Klauder translated these concepts into drawings that guided the placement of steel and stone.\"],\n\n                                            image:\"cathedral.jpg\"},\n\n                  \"Point Park\":{\n                                description:\n                                [\"Point State Park (locally known as The Point) is a Pennsylvania state park on 36 acres (150,000 m2) in Downtown Pittsburgh, Allegheny County, Pennsylvania, USA, at the confluence of the Allegheny and Monongahela rivers, forming the Ohio River.\",\n                                \"Built on land acquired via eminent domain from industrial enterprises in the 1950s, the park opened in August 1974[4] when construction was completed on its iconic fountain. Pittsburgh settled on the current design after rejecting an alternative plan for a Point Park Civic Center designed by Frank Lloyd Wright.\",\n                                \"The park also includes the outlines and remains of two of the oldest structures in Pittsburgh, Fort Pitt and Fort Duquesne. The Fort Pitt Museum, housed in the Monongahela Bastion of Fort Pitt, commemorates the French and Indian War (1754–63), in which the area soon to become Pittsburgh was a major battlefield. It was designated a National Historic Landmark in 1960 for its role in the strategic struggles between Native Americans, French colonists, and British colonists, for control of the Ohio River watershed.\"],\n\n                                image:\"pp.jpg\"}\n                  };\n\nexport default locations;\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport Navbar from './components/Navbar';\nimport MainContent from './components/MainContent';\nimport './App.css';\n\nimport locations from './locations';\n\nclass App extends Component {\n  state = {\n    location: {\n      name: \"Mount Washington\",\n      description:locations[\"Mount Washington\"][\"description\"],\n      background:{\n        backgroundImage: 'linear-gradient(0deg,rgba(0,0,0,0.3),rgba(0,0,0,0.3)),url(\"./images/'+\n        locations[\"Mount Washington\"][\"image\"]+\n        '\")'\n      }\n    }\n  }\n\n  handleLocationChange = (newLocation) => {\n    this.setState({\n      location: {\n        name:newLocation,\n        description: locations[newLocation][\"description\"],\n        background:{\n          backgroundImage: 'linear-gradient(0deg,rgba(0,0,0,0.3),rgba(0,0,0,0.3)),url(\"./images/'+\n          locations[newLocation][\"image\"]+\n          '\")'\n        }\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\" id=\"App\" style={this.state.location.background}>\n        <Navbar\n          changeLocation = {this.handleLocationChange}\n          locations={Object.keys(locations)}></Navbar>\n        <MainContent\n          locationName = {this.state.location.name}\n          locationDescription = {this.state.location.description}\n          ></MainContent>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}